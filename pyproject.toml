[project]
name = "settfex"
version = "0.1.0"
description = "Async Python library for fetching real-time and historical data from the Stock Exchange of Thailand (SET) and Thailand Futures Exchange (TFEX)"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "curl-cffi>=0.6.0",
    "pydantic>=2.0.0",
    "loguru>=0.7.0",
    "diskcache>=5.6.0",
]
authors = [
    { name = "batt", email = "b@candythink.com" }
]
maintainers = [
    { name = "batt", email = "b@candythink.com" }
]
license = { text = "MIT" }
keywords = [
    "set",
    "tfex",
    "thailand",
    "stock",
    "exchange",
    "futures",
    "finance",
    "trading",
    "async",
    "api",
    "market-data",
    "thai-stocks",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://github.com/lumduan/settfex"
Documentation = "https://github.com/lumduan/settfex#readme"
Repository = "https://github.com/lumduan/settfex"
Issues = "https://github.com/lumduan/settfex/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["settfex"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers --cov=settfex --cov-report=term-missing"

[tool.coverage.run]
source = ["settfex"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[project.optional-dependencies]
examples = [
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
]

[dependency-groups]
dev = [
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.13.2",
]
